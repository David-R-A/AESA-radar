#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'aesa_radar_hps' in
 * file 'aesa_radar_hps.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'system_input_bridge', class 'altera_up_avalon_to_external_bus_bridge'
 * The macros are prefixed with 'SYSTEM_INPUT_BRIDGE_'.
 * The prefix is the slave descriptor.
 */
#define SYSTEM_INPUT_BRIDGE_COMPONENT_TYPE altera_up_avalon_to_external_bus_bridge
#define SYSTEM_INPUT_BRIDGE_COMPONENT_NAME system_input_bridge
#define SYSTEM_INPUT_BRIDGE_BASE 0x0
#define SYSTEM_INPUT_BRIDGE_SPAN 64
#define SYSTEM_INPUT_BRIDGE_END 0x3f

/*
 * Macros for device 'hps_register', class 'altera_avalon_pio'
 * The macros are prefixed with 'HPS_REGISTER_'.
 * The prefix is the slave descriptor.
 */
#define HPS_REGISTER_COMPONENT_TYPE altera_avalon_pio
#define HPS_REGISTER_COMPONENT_NAME hps_register
#define HPS_REGISTER_BASE 0x0
#define HPS_REGISTER_SPAN 16
#define HPS_REGISTER_END 0xf
#define HPS_REGISTER_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_REGISTER_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_REGISTER_CAPTURE 0
#define HPS_REGISTER_DATA_WIDTH 8
#define HPS_REGISTER_DO_TEST_BENCH_WIRING 0
#define HPS_REGISTER_DRIVEN_SIM_VALUE 0
#define HPS_REGISTER_EDGE_TYPE NONE
#define HPS_REGISTER_FREQ 50000000
#define HPS_REGISTER_HAS_IN 0
#define HPS_REGISTER_HAS_OUT 1
#define HPS_REGISTER_HAS_TRI 0
#define HPS_REGISTER_IRQ_TYPE NONE
#define HPS_REGISTER_RESET_VALUE 0

/*
 * Macros for device 'fpga_register', class 'altera_avalon_pio'
 * The macros are prefixed with 'FPGA_REGISTER_'.
 * The prefix is the slave descriptor.
 */
#define FPGA_REGISTER_COMPONENT_TYPE altera_avalon_pio
#define FPGA_REGISTER_COMPONENT_NAME fpga_register
#define FPGA_REGISTER_BASE 0x10
#define FPGA_REGISTER_SPAN 16
#define FPGA_REGISTER_END 0x1f
#define FPGA_REGISTER_BIT_CLEARING_EDGE_REGISTER 0
#define FPGA_REGISTER_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FPGA_REGISTER_CAPTURE 0
#define FPGA_REGISTER_DATA_WIDTH 8
#define FPGA_REGISTER_DO_TEST_BENCH_WIRING 0
#define FPGA_REGISTER_DRIVEN_SIM_VALUE 0
#define FPGA_REGISTER_EDGE_TYPE NONE
#define FPGA_REGISTER_FREQ 50000000
#define FPGA_REGISTER_HAS_IN 1
#define FPGA_REGISTER_HAS_OUT 0
#define FPGA_REGISTER_HAS_TRI 0
#define FPGA_REGISTER_IRQ_TYPE NONE
#define FPGA_REGISTER_RESET_VALUE 0


#endif /* _ALTERA_HPS_0_H_ */
